library(devtools)
list.files()
?build
build(manual=TRUE)
install.packages("clairvoyant_0.1.0.tar.gz")
library(clairvoyant)
EventParameters
list.files()
detach("clairvoyant")
restart()
remove.packages("clairvoyant")
install.packages("clairvoyant_0.1.0.tar.gz")
library(clairvoyant)
install()
library(clairvoyant)
data(events.schedule)
data(pineapple.sales)
event.parameters <- EventParameters(events.schedule=events.schedule,
weeks.before=10,
days.before=1, days.after=1,
forecast.method='Arima011')
disaggregation.parameters <- DisaggregationParameters(get.pred.int=T)
pineapple.clairvoyant <-
Clairvoyant(pineapple.sales,
missing.fill=NA,
training.end.date=as.Date('2019-03-02'),
forecast.end.date=as.Date('2019-11-21'),
event.parameters=event.parameters,
transform='Box_Cox',
disaggregation.parameters=disaggregation.parameters,
models=c("StlElm", "Bsts", "HWinters", "Nnetar", "StlMlp", "AutoArima"),
consensus.method='median')
summary(pineapple.clairvoyant$evaluation$weekly)
summary(pineapple.clairvoyant$evaluation$daily)
PlotForecastEnsemble(pineapple.clairvoyant)
ii.dates <- seq(as.Date("2018-03-16"), as.Date("2021-03-16"))
ii.dates <- seq(as.Date("2018-03-16"), as.Date("2021-03-16"), by=1)
ii.dates
length(ii.dates)
rep(3, 32)
exp(10)
round(exp(10))
round(10^3)
round(10^(7/2))
events.schedule
?ts
10^1.3
ii.dates <- seq(as.Date("2018-03-16"), as.Date("2021-03-16"), by=1)
ii.len <- length(ii.dates)
# Simulate baseline noise
ii.ts <- rnorm(ii.len, 10, 3.7)
# Simulate day of week effect (starts on a Friday)
ii.ts <- ii.ts + rnorm(ii.len, c(2.5, 3.5, 4, -1.7, -1.8, -1.4), 0.2)
# Simulate yearly seasonality
ii.ts <- ii.ts + rnorm(ii.len, c(rep(1, 31), rep(0.5, 30), rep(-0.5, 31),
rep(-1.5, 30), rep(-2.5, 31), rep(-2, 31),
rep(2.4, 30), rep(-0.2, 31), rep(1.5, 30),
rep(-2.3, 31), rep(0.3, 31), rep(0.6, 28)),
0.1)
# Simulate a few holiday effects
ii.thanks <- as.Date(c("2018-11-22", "2018-11-23", "2019-11-28", "2019-11-29",
"2020-11-26", "2020-11-27"))
ii.ts[ii.dates %in% ii.thanks] <-
ii.ts[ii.dates %in% ii.thanks] + rnorm(length(ii.thanks), c(7, 3), 0.4)
ii.memorial <- as.Date(c("2018-05-28", "2019-05-27", "2020-05-27"))
ii.ts[ii.dates %in% ii.memorial] <- ii.ts[ii.dates %in% ii.memorial] + rnorm(3, 3.4, 0.2)
ii.mlk <- as.Date(c("2019-01-21", "2020-01-20", "2021-01-20"))
ii.ts[ii.dates %in% ii.mlk] <- ii.ts[ii.dates %in% ii.mlk] + rnorm(3, 2.7, 0.1)
# Simulate a slow trend
ii.ts <- ii.ts + rnorm(ii.len, 2 * c(1:ii.len) / ii.len, 0.01)
ii.ts <- ii.ts ^ (1.37)
plot(ts(ii.ts))
ii.ts <- ii.ts + rnorm(ii.len, c(2.5, 3.5, 4, -1.7, -1.8, -1.4), 0.2)
# Simulate yearly seasonality
ii.ts <- ii.ts + rnorm(ii.len, c(rep(1, 31), rep(0.5, 30), rep(-0.5, 31),
rep(-1.5, 30), rep(-2.5, 31), rep(-2, 31),
rep(2.4, 30), rep(-0.2, 31), rep(1.5, 30),
rep(-2.3, 31), rep(0.3, 31), rep(0.6, 28)),
0.1)
# Simulate a few holiday effects
ii.thanks <- as.Date(c("2018-11-22", "2018-11-23", "2019-11-28", "2019-11-29",
"2020-11-26", "2020-11-27"))
ii.ts[ii.dates %in% ii.thanks] <-
ii.ts[ii.dates %in% ii.thanks] + rnorm(length(ii.thanks), c(7, 3), 0.4)
ii.memorial <- as.Date(c("2018-05-28", "2019-05-27", "2020-05-27"))
ii.ts[ii.dates %in% ii.memorial] <- ii.ts[ii.dates %in% ii.memorial] + rnorm(3, 3.4, 0.2)
ii.mlk <- as.Date(c("2019-01-21", "2020-01-20", "2021-01-20"))
ii.ts[ii.dates %in% ii.mlk] <- ii.ts[ii.dates %in% ii.mlk] + rnorm(3, 2.7, 0.1)
# Simulate a slow trend
ii.ts <- ii.ts + rnorm(ii.len, 6 * c(1:ii.len) / ii.len, 0.01)
ii.ts <- ii.ts ^ (1.37)
plot(ts(ii.ts))
ii.ts <- ii.ts + rnorm(ii.len, c(2.5, 3.5, 4, -1.7, -1.8, -1.4), 0.2)
# Simulate yearly seasonality
ii.ts <- ii.ts + rnorm(ii.len, c(rep(1, 31), rep(0.5, 30), rep(-0.5, 31),
rep(-1.5, 30), rep(-2.5, 31), rep(-2, 31),
rep(2.4, 30), rep(-0.2, 31), rep(1.5, 30),
rep(-2.3, 31), rep(0.3, 31), rep(0.6, 28)),
0.1)
# Simulate a few holiday effects
ii.thanks <- as.Date(c("2018-11-22", "2018-11-23", "2019-11-28", "2019-11-29",
"2020-11-26", "2020-11-27"))
ii.ts[ii.dates %in% ii.thanks] <-
ii.ts[ii.dates %in% ii.thanks] + rnorm(length(ii.thanks), c(7, 3), 0.4)
ii.memorial <- as.Date(c("2018-05-28", "2019-05-27", "2020-05-27"))
ii.ts[ii.dates %in% ii.memorial] <- ii.ts[ii.dates %in% ii.memorial] + rnorm(3, 3.4, 0.2)
ii.mlk <- as.Date(c("2019-01-21", "2020-01-20", "2021-01-20"))
ii.ts[ii.dates %in% ii.mlk] <- ii.ts[ii.dates %in% ii.mlk] + rnorm(3, 2.7, 0.1)
# Simulate a slow trend
ii.ts <- ii.ts + rnorm(ii.len, 25 * c(1:ii.len) / ii.len, 0.01)
ii.ts <- ii.ts ^ (1.37)
plot(ts(ii.ts))
ii.ts <- ii.ts + rnorm(ii.len, c(2.5, 3.5, 4, -1.7, -1.8, -1.4), 0.2)
# Simulate yearly seasonality
ii.ts <- ii.ts + rnorm(ii.len, c(rep(1, 31), rep(0.5, 30), rep(-0.5, 31),
rep(-1.5, 30), rep(-2.5, 31), rep(-2, 31),
rep(2.4, 30), rep(-0.2, 31), rep(1.5, 30),
rep(-2.3, 31), rep(0.3, 31), rep(0.6, 28)),
0.1)
# Simulate a few holiday effects
ii.thanks <- as.Date(c("2018-11-22", "2018-11-23", "2019-11-28", "2019-11-29",
"2020-11-26", "2020-11-27"))
ii.ts[ii.dates %in% ii.thanks] <-
ii.ts[ii.dates %in% ii.thanks] + rnorm(length(ii.thanks), c(7, 3), 0.4)
ii.memorial <- as.Date(c("2018-05-28", "2019-05-27", "2020-05-27"))
ii.ts[ii.dates %in% ii.memorial] <- ii.ts[ii.dates %in% ii.memorial] + rnorm(3, 3.4, 0.2)
ii.mlk <- as.Date(c("2019-01-21", "2020-01-20", "2021-01-20"))
ii.ts[ii.dates %in% ii.mlk] <- ii.ts[ii.dates %in% ii.mlk] + rnorm(3, 2.7, 0.1)
# Simulate a slow trend
ii.ts <- ii.ts + rnorm(ii.len, 25 * c(1:ii.len) / ii.len, 0.01)
ii.ts <- ii.ts ^ (1.66)
plot(ts(ii.ts))
ii.dates <- seq(as.Date("2018-03-02"), as.Date("2021-03-16"), by=1)
ii.len <- length(ii.dates)
# Simulate baseline noise
ii.ts <- rnorm(ii.len, 10, 3.7)
# Simulate day of week effect (starts on a Friday)
ii.ts <- ii.ts + rnorm(ii.len, c(2.5, 3.5, 4, -1.7, -1.8, -1.4), 0.2)
# Simulate yearly seasonality
ii.ts <- ii.ts + rnorm(ii.len, c(rep(1, 31), rep(0.5, 30), rep(-0.5, 31),
rep(-1.5, 30), rep(-2.5, 31), rep(-2, 31),
rep(2.4, 30), rep(-0.2, 31), rep(1.5, 30),
rep(-2.3, 31), rep(0.3, 31), rep(0.6, 28)),
0.1)
# Simulate a few holiday effects
ii.thanks <- as.Date(c("2018-11-22", "2018-11-23", "2019-11-28", "2019-11-29",
"2020-11-26", "2020-11-27"))
ii.ts[ii.dates %in% ii.thanks] <-
ii.ts[ii.dates %in% ii.thanks] + rnorm(length(ii.thanks), c(7, 3), 0.4)
ii.memorial <- as.Date(c("2018-05-28", "2019-05-27", "2020-05-27"))
ii.ts[ii.dates %in% ii.memorial] <- ii.ts[ii.dates %in% ii.memorial] + rnorm(3, 3.4, 0.2)
ii.mlk <- as.Date(c("2019-01-21", "2020-01-20", "2021-01-20"))
ii.ts[ii.dates %in% ii.mlk] <- ii.ts[ii.dates %in% ii.mlk] + rnorm(3, 2.7, 0.1)
# Simulate a slow trend
ii.ts <- ii.ts + rnorm(ii.len, 25 * c(1:ii.len) / ii.len, 0.01)
# Keep this as the control series and then simulate the pandemic effect
con.ts <- ii.ts ^ (2.3)
p.dates <-(ii.dates >= as.Date("2020-03-16"))
p.len <- length(p.dates)
ii.ts[p.dates] <- ii.ts[p.dates] + rnorm(p.len, 100 * c(p.len:1) / p.len)
ii.ts <- ii.ts ^ (2.3)
plot(ts(con.ts))
lines(ts(ii.ts), color='red')
p.dates
ii.dates <- seq(as.Date("2018-03-02"), as.Date("2021-03-16"), by=1)
ii.len <- length(ii.dates)
# Simulate baseline noise
ii.ts <- rnorm(ii.len, 10, 3.7)
# Simulate day of week effect (starts on a Friday)
ii.ts <- ii.ts + rnorm(ii.len, c(2.5, 3.5, 4, -1.7, -1.8, -1.4), 0.2)
# Simulate yearly seasonality
ii.ts <- ii.ts + rnorm(ii.len, c(rep(1, 31), rep(0.5, 30), rep(-0.5, 31),
rep(-1.5, 30), rep(-2.5, 31), rep(-2, 31),
rep(2.4, 30), rep(-0.2, 31), rep(1.5, 30),
rep(-2.3, 31), rep(0.3, 31), rep(0.6, 28)),
0.1)
# Simulate a few holiday effects
ii.thanks <- as.Date(c("2018-11-22", "2018-11-23", "2019-11-28", "2019-11-29",
"2020-11-26", "2020-11-27"))
ii.ts[ii.dates %in% ii.thanks] <-
ii.ts[ii.dates %in% ii.thanks] + rnorm(length(ii.thanks), c(7, 3), 0.4)
ii.memorial <- as.Date(c("2018-05-28", "2019-05-27", "2020-05-27"))
ii.ts[ii.dates %in% ii.memorial] <- ii.ts[ii.dates %in% ii.memorial] + rnorm(3, 3.4, 0.2)
ii.mlk <- as.Date(c("2019-01-21", "2020-01-20", "2021-01-20"))
ii.ts[ii.dates %in% ii.mlk] <- ii.ts[ii.dates %in% ii.mlk] + rnorm(3, 2.7, 0.1)
# Simulate a slow trend
ii.ts <- ii.ts + rnorm(ii.len, 25 * c(1:ii.len) / ii.len, 0.01)
# Keep this as the control series and then simulate the pandemic effect
con.ts <- ii.ts ^ (2.3)
p.dates <- (ii.dates >= as.Date("2020-03-16"))
p.len <- sum(p.dates)
ii.ts[p.dates] <- ii.ts[p.dates] + rnorm(p.len, 100 * c(p.len:1) / p.len)
ii.ts <- ii.ts ^ (2.3)
plot(ts(con.ts))
lines(ts(ii.ts))
plot(ts(con.ts))
plot(ts(ii.ts), color='red')
ii.dates <- seq(as.Date("2018-03-02"), as.Date("2021-03-16"), by=1)
ii.len <- length(ii.dates)
# Simulate baseline noise
ii.ts <- rnorm(ii.len, 10, 3.7)
# Simulate day of week effect (starts on a Friday)
ii.ts <- ii.ts + rnorm(ii.len, c(2.5, 3.5, 4, -1.7, -1.8, -1.4), 0.2)
# Simulate yearly seasonality
ii.ts <- ii.ts + rnorm(ii.len, c(rep(1, 31), rep(0.5, 30), rep(-0.5, 31),
rep(-1.5, 30), rep(-2.5, 31), rep(-2, 31),
rep(2.4, 30), rep(-0.2, 31), rep(1.5, 30),
rep(-2.3, 31), rep(0.3, 31), rep(0.6, 28)),
0.1)
# Simulate a few holiday effects
ii.thanks <- as.Date(c("2018-11-22", "2018-11-23", "2019-11-28", "2019-11-29",
"2020-11-26", "2020-11-27"))
ii.ts[ii.dates %in% ii.thanks] <-
ii.ts[ii.dates %in% ii.thanks] + rnorm(length(ii.thanks), c(7, 3), 0.4)
ii.memorial <- as.Date(c("2018-05-28", "2019-05-27", "2020-05-27"))
ii.ts[ii.dates %in% ii.memorial] <- ii.ts[ii.dates %in% ii.memorial] + rnorm(3, 3.4, 0.2)
ii.mlk <- as.Date(c("2019-01-21", "2020-01-20", "2021-01-20"))
ii.ts[ii.dates %in% ii.mlk] <- ii.ts[ii.dates %in% ii.mlk] + rnorm(3, 2.7, 0.1)
# Simulate a slow trend
ii.ts <- ii.ts + rnorm(ii.len, 25 * c(1:ii.len) / ii.len, 0.01)
# Keep this as the control series and then simulate the pandemic effect
con.ts <- ii.ts ^ (2.3)
p.dates <- (ii.dates >= as.Date("2020-03-16"))
p.len <- sum(p.dates)
ii.ts[p.dates] <- ii.ts[p.dates] + rnorm(p.len, 23 * c(p.len:1) / p.len)
ii.ts <- ii.ts ^ (2.3)
plot(ts(con.ts))
lines(ts(ii.ts), col='red')
?ts
plot(ts(con.ts), ylim=c(0, max(ii.ts)))
lines(ts(ii.ts, start=which(ii.dates == as.Date('2020-03-16'))), col='red')
which(ii.dates == as.Date('2020-03-16'
))
plot(ts(con.ts), ylim=c(0, max(ii.ts)))
lines(ts(ii.ts[p.dates], start=which(ii.dates == as.Date('2020-03-16'))), col='red')
p.dates <- (ii.dates >= as.Date("2020-03-16"))
p.dates2 <- (ii.dates >= as.Date("2020-03-15"))
p.len <- sum(p.dates)
plot(ts(con.ts), ylim=c(0, max(ii.ts)))
lines(ts(ii.ts[p.dates2], start=which(ii.dates == as.Date('2020-03-15'))), col='red')
events.schedule
rep(c('a','b', 'c'), each=3)
rep('a', 'b', 'c', each=3)
remove.packages(clairvoyant)
?mlp
thief::elm.theif(sample.ts)
thief::elm.theif(ii.ts)
nnfor::elm.theif(ii.ts)
?elm.thief
?elm
sample.ts <- ts(ii.ts)
nnfor::elm(sample.ts)
build()
install()
library(clairvoyant)
detach('package:clairvoyant')
remove.packages(clairvoyant)
remove.packages('clairvoyant')
build()
install()
build()
install()
build()
install()
build()
install()
install()
quit()
library(devtools)
build()
install()
